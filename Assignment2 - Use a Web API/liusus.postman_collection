{
	"info": {
		"_postman_id": "11a40bd5-c0e9-4cd3-8946-9dcad330eed5",
		"name": "Assignment2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Get 30 Gists",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var body = JSON.parse(responseBody)\r",
							"tests[\"Are there at least 30 gists\"] = (body.length >=30)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/public",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"public"
					],
					"query": [
						{
							"key": "public",
							"value": "True",
							"disabled": true
						},
						{
							"key": "per_page",
							"value": "30",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Check if wolfordj has Gist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var body = JSON.parse(responseBody)\r",
							"tests[\"User has at least one gist\"] = (body.length >=1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/users/wolfordj/gists",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"users",
						"wolfordj",
						"gists"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.1 Does Gist creation increase by 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var body = JSON.parse(responseBody)\r",
							"var body_length = body.length\r",
							"pm.environment.set(\"gist_count\", body_length)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/users/Haru825/gists",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"users",
						"Haru825",
						"gists"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3.2 create Gist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var body = JSON.parse(responseBody)\r",
							"//tests[\"User has at least one gist\"] = (body.length >=1);\r",
							"\r",
							"console.log(pm.response.json())\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//var body_length = body.length\r",
							"//pm.environment.set(\"gist_count\", body_length)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Hello World Examples\",\r\n    \"public\": true,\r\n    \"files\": {\r\n        \"hello_world.js\": {\r\n            \"content\": \"conosle.log('Hello World');\"\r\n        },\r\n        \"hello_world_js.txt\": {\r\n            \"content\": \"Run `node hello_world.js` to print Hello World\"\r\n        }\r\n    }\r\n}"
				},
				"url": {
					"raw": "https://api.github.com/gists",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.3 Gist number increase by 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var body = JSON.parse(responseBody)\r",
							"var body_length = body.length\r",
							"\r",
							"//pm.environment.set(\"gist_count\", body_length)\r",
							"//pm.environment.set(\"orig_discription\", body.)\r",
							"tests[\"Added a gist to count\"] = (body.length == pm.environment.get('gist_count')+1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.1 Creating a Gist",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var body = JSON.parse(responseBody)\r",
							"//console.log(Object.keys(body.files).length)\r",
							"\r",
							"console.log(pm.response.json())\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"pm.environment.set(\"description\", body.description)\r",
							"pm.environment.set(\"public\", body.public)\r",
							"pm.environment.set(\"files\", JSON.stringify(Object.keys(body.files)))\r",
							"pm.environment.set(\"files length\", Object.keys(body.files).length)\r",
							"var url1 = JSON.stringify(body.url);\r",
							"\r",
							"pm.test (body.description ==\"Hello World Test 4\")\r",
							"\r",
							"pm.environment.set(\"urltouse4\", url1.replaceAll(\"\\\"\", \"\"))\r",
							"pm.environment.set(\"gistID\", body.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Hello World Test 4\",\r\n    \"public\": true,\r\n    \"files\": {\r\n        \"hello_world.js\": {\r\n            \"content\": \"conosle.log('Hello World');\"\r\n        },\r\n        \"hello_world_js.txt\": {\r\n            \"content\": \"Run `node hello_world.js` to print Hello World\"\r\n        }\r\n    }\r\n}"
				},
				"url": {
					"raw": "https://api.github.com/gists",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists"
					],
					"query": [
						{
							"key": "description",
							"value": "Hello World Examples",
							"disabled": true
						},
						{
							"key": "public",
							"value": "true",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5.1 Change value",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var body = JSON.parse(responseBody)\r",
							"\r",
							"console.log(pm.response.json())\r",
							"pm.test(\"Status code is 200: OK\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"pm.environment.set(\"description5\", body.description)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Wait this is change 5?\"\r\n}"
				},
				"url": {
					"raw": "{{urltouse4}}",
					"host": [
						"{{urltouse4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "5.2 Check if the edit is done",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var body = JSON.parse(responseBody)\r",
							"\r",
							"console.log(pm.response.json())\r",
							"pm.test(pm.environment.get(\"description5\") == body.description)\r",
							"pm.test(pm.environment.get(\"description5\") != pm.environment.get(\"description\"))\r",
							"\r",
							"//expect(pm.environment.get(\"description5\")).to.not.equal(\"test\")\r",
							"console.log(pm.environment.get(\"description\"))\r",
							"console.log(pm.environment.get(\"description5\"))\r",
							"console.log(body.description)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{urltouse4}}",
					"host": [
						"{{urltouse4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "6.1 Is gist unstarred",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 if there is no star\", () => {\r",
							"  pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/{{gistID}}/star",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{gistID}}",
						"star"
					]
				}
			},
			"response": []
		},
		{
			"name": "6.2 Add star to gist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204 if modified\", () => {\r",
							"  pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/{{gistID}}/star",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{gistID}}",
						"star"
					]
				}
			},
			"response": []
		},
		{
			"name": "6.3 Check if gist is starred",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var body = JSON.parse(responseBody)\r",
							"\r",
							"pm.test(\"Status code is 204 if there is star\", () => {\r",
							"  pm.response.to.have.status(204);\r",
							"});\r",
							"//var url1 = JSON.stringify(body.starred_url);\r",
							"\r",
							"//pm.environment.set(\"starurl\", url1.replaceAll(\"\\\"\", \"\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/{{gistID}}/star",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{gistID}}",
						"star"
					]
				}
			},
			"response": []
		},
		{
			"name": "7. Confirm list of starred gists is correct",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//pm.test(\"Status code is 200: OK\", () => {\r",
							"//  pm.response(200);\r",
							"//});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/starred",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"starred"
					],
					"query": [
						{
							"key": "since",
							"value": "2022-01-01 01:01:100",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "8.1 Check if gists exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 it is starred and exists\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/starred",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"starred"
					]
				}
			},
			"response": []
		},
		{
			"name": "8.2 Remove star from gist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204 removed star\", () => {\r",
							"  pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/{{gistID}}/star",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{gistID}}",
						"star"
					]
				}
			},
			"response": []
		},
		{
			"name": "8.3 verify gist is nolonger starred",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 the gist is gone from star list\", () => {\r",
							"  pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/{{gistID}}/star",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{gistID}}",
						"star"
					]
				}
			},
			"response": []
		},
		{
			"name": "9.1 Verify gist exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/{{gistID}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{gistID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "9.2 Delete Gist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204 removed gits\", () => {\r",
							"  pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/{{gistID}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{gistID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "9.3 Check that the gist is gone",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 gits is gone\", () => {\r",
							"  pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/gists/{{gistID}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{gistID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}